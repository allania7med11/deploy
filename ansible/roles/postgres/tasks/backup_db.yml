- name: Check if PostgreSQL database exists
  shell: |
    sudo -u postgres psql -lqt | cut -d '|' -f 1 | grep -qw '{{ db_name }}' && echo 0 || echo 1
  changed_when: false
  register: db_exists
  ignore_errors: true

- set_fact:
    database_exists: "{{ db_exists.stdout == '0' }}"

- name: Set Google Drive access Token
  import_tasks:
    file: "roles/drive/tasks/access_token.yml"
  when: database_exists

- name: Ensure backup_directory exists
  file:
    path: "{{ backup_directory }}"
    state: directory
  when: database_exists

- name: Set backup_name
  set_fact:
    backup_name: "{{ db_name }}_{{ lookup('pipe', 'date +%Y_%m_%d_%H_%M') }}.sql"
  when: database_exists

- name: Backup PostgreSQL database
  become: true
  shell:
    cmd: sudo -u postgres pg_dump {{ db_name }} > {{ backup_directory }}/{{ backup_name }}
  environment:
    PGPASSWORD: "{{ postgres_password }}"
  when: database_exists

- name: Compress {{ backup_name }}
  archive:
    path: "{{ backup_directory }}/{{ backup_name }}"
    remove: true
    format: zip
  when: database_exists

- name: Push {{ backup_name }}.zip to Google Drive
  import_tasks:
    file: "roles/drive/tasks/push_file.yml"
  vars:
    file_name: "{{ backup_name }}.zip"
    file_path: "{{ backup_directory }}/{{ backup_name }}.zip"
    folder_id: "{{ drive_backup_folder_id }}"
  when: database_exists

- name: Remove {{ backup_name }}.zip
  ansible.builtin.file:
    path: "{{ backup_directory }}/{{ backup_name }}.zip"
    state: absent
  when: database_exists