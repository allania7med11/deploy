- name: Set container_name for testing
  set_fact:
    container_name: "{{ project_name }}_test"

- name: Remove existing {{ container_name }} container if it exists
  docker_container:
    name: "{{ container_name }}"
    state: absent

- name: Run {{ container_name }} container for testing
  docker_container: 
    name: "{{ container_name }}"
    image: "{{ docker_image }}"
    state: started
    restart_policy: no
    networks:
      - name: host
    env_file: "{{ env_file_path }}"
    env:
      ENVIRONMENT: "test"
    detach: yes  # Detach to let the container run tests and exit

- name: Wait for tests to complete
  command: docker wait {{ container_name }}
  register: tests_result

- name: Fetch tests logs for debugging
  command: docker logs {{ container_name }}
  register: tests_logs

- name: Print tests logs
  debug:
    var: tests_logs.stdout_lines

- name: Remove {{ container_name }} container
  docker_container:
    name: "{{ container_name }}"
    state: absent
  ignore_errors: true

- name: Check if any tests failed by searching for 'failed' in summary
  assert:
    that:
      - "'failed' not in tests_logs.stdout.lower()"
    msg: "Some tests failed in the container {{ container_name }}. Check tests output for details."
