- name: Run {{  project_name }} container for static folder generation
  docker_container:
    name: "{{  project_name }}"
    image: "{{  docker_image }}"
    state: started
    restart_policy: always
    networks:
      - name: host
    env_file: "{{ env_file_generate_static_path }}"
    detach: yes   # Detach from the container after starting it


- name: Get Docker container ID
  command: docker ps -qf "name={{  project_name }}"
  register: container_id_output

- name: Extract container ID
  set_fact:
    container_id: "{{ container_id_output.stdout_lines[0] }}"

- name: Wait for "Generation completed successfully" message
  command: docker logs --tail 1 {{ container_id }}
  register: logs_output
  until: logs_output.stdout_lines | length > 0 and logs_output.stdout_lines[0] is search("Generation completed successfully")
  retries: 20
  delay: 5

- name: Copy files from container to host
  shell: sudo docker cp  {{  project_name }}:/app/{{  generated_folder_name }} /var/www/


- name: Stop {{  project_name }} container
  docker_container:
    name: "{{  project_name }}"
    state: stopped
  ignore_errors: true

- name: Remove {{  project_name }} container
  docker_container:
    name: "{{  project_name }}"
    state: absent
  ignore_errors: true

- name: Ensure project_directory exists
  file:
    path: "{{ project_directory }}"
    state: directory

- name: Compress generated front folder under Vagrant folder
  archive:
    path: /var/www/{{  generated_folder_name }}
    dest: "{{ generated_compress_folder_path }}"
