- name: Get infos on container
  docker_container_info:
    name: my_container
  register: result

- name: Does container exist?
  debug:
    msg: "The container {{ 'exists' if result.exists else 'does not exist' }}"

- name: Stop and remove the Docker container if it is running
  docker_container:
    name: "{{ project_name }}"
    state: absent  # This ensures the container is not only stopped but also removed
  when: result.exists
  register: container_destroyed

- name: Delete the database
  import_tasks: "{{ ansible_directory }}/roles/postgres/tasks/delete_db.yml"
  when: container_destroyed is succeeded

- name: Run {{ project_name }} container
  docker_container:
    name: "{{ project_name }}"
    image: "{{ docker_image }}"
    state: started
    restart_policy: always
    networks:
      - name: host
    env_file: "{{ env_file_path }}"
    detach: yes   # Detach from the container after starting it
  when: result.exists

